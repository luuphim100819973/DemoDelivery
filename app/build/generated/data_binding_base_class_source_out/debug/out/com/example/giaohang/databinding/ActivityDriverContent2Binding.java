// Generated by view binder compiler. Do not edit!
package com.example.giaohang.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.Switch;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.example.giaohang.R;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.lorentzos.flingswipe.SwipeFlingAdapterView;
import com.ncorti.slidetoact.SlideToActView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityDriverContent2Binding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final LinearLayout bringUpBottomLayoutHandpick;

  @NonNull
  public final ImageView cancel;

  @NonNull
  public final ImageView cancelAfter;

  @NonNull
  public final LinearLayout customerInfo;

  @NonNull
  public final LinearLayout customerInfoHandPicK;

  @NonNull
  public final LinearLayout customerInfoHandPicKAfter;

  @NonNull
  public final ImageView drawerButton;

  @NonNull
  public final SwipeFlingAdapterView frame;

  @NonNull
  public final Button historyDriverBtn;

  @NonNull
  public final TextView locationStart;

  @NonNull
  public final TextView locationStartAfter;

  @NonNull
  public final TextView locationStartHandpick;

  @NonNull
  public final TextView locationStop;

  @NonNull
  public final TextView locationStopAfter;

  @NonNull
  public final TextView locationStopHandpick;

  @NonNull
  public final AppBarLayoutDriverBinding mainPageToolbar55;

  @NonNull
  public final FloatingActionButton messageToCus;

  @NonNull
  public final FloatingActionButton messageToCustAfter;

  @NonNull
  public final TextView money;

  @NonNull
  public final TextView moneyAfter;

  @NonNull
  public final TextView moneyHandpick;

  @NonNull
  public final TextView name;

  @NonNull
  public final TextView nameAfter;

  @NonNull
  public final TextView nameHandpick;

  @NonNull
  public final FloatingActionButton openMapsStart;

  @NonNull
  public final FloatingActionButton openMapsStartAfter;

  @NonNull
  public final FloatingActionButton openMapsStartHandpick;

  @NonNull
  public final FloatingActionButton openMapsStop;

  @NonNull
  public final FloatingActionButton openMapsStopAfter;

  @NonNull
  public final FloatingActionButton openMapsStopHandpick;

  @NonNull
  public final FloatingActionButton phoneFromCust;

  @NonNull
  public final FloatingActionButton phoneFromCustAfter;

  @NonNull
  public final Button resetMapBtn;

  @NonNull
  public final SlideToActView rideStatus;

  @NonNull
  public final Button rideStatusAfter;

  @NonNull
  public final Button rideStatusHandpick;

  @NonNull
  public final Switch workingSwitch;

  private ActivityDriverContent2Binding(@NonNull FrameLayout rootView,
      @NonNull LinearLayout bringUpBottomLayoutHandpick, @NonNull ImageView cancel,
      @NonNull ImageView cancelAfter, @NonNull LinearLayout customerInfo,
      @NonNull LinearLayout customerInfoHandPicK, @NonNull LinearLayout customerInfoHandPicKAfter,
      @NonNull ImageView drawerButton, @NonNull SwipeFlingAdapterView frame,
      @NonNull Button historyDriverBtn, @NonNull TextView locationStart,
      @NonNull TextView locationStartAfter, @NonNull TextView locationStartHandpick,
      @NonNull TextView locationStop, @NonNull TextView locationStopAfter,
      @NonNull TextView locationStopHandpick, @NonNull AppBarLayoutDriverBinding mainPageToolbar55,
      @NonNull FloatingActionButton messageToCus, @NonNull FloatingActionButton messageToCustAfter,
      @NonNull TextView money, @NonNull TextView moneyAfter, @NonNull TextView moneyHandpick,
      @NonNull TextView name, @NonNull TextView nameAfter, @NonNull TextView nameHandpick,
      @NonNull FloatingActionButton openMapsStart, @NonNull FloatingActionButton openMapsStartAfter,
      @NonNull FloatingActionButton openMapsStartHandpick,
      @NonNull FloatingActionButton openMapsStop, @NonNull FloatingActionButton openMapsStopAfter,
      @NonNull FloatingActionButton openMapsStopHandpick,
      @NonNull FloatingActionButton phoneFromCust, @NonNull FloatingActionButton phoneFromCustAfter,
      @NonNull Button resetMapBtn, @NonNull SlideToActView rideStatus,
      @NonNull Button rideStatusAfter, @NonNull Button rideStatusHandpick,
      @NonNull Switch workingSwitch) {
    this.rootView = rootView;
    this.bringUpBottomLayoutHandpick = bringUpBottomLayoutHandpick;
    this.cancel = cancel;
    this.cancelAfter = cancelAfter;
    this.customerInfo = customerInfo;
    this.customerInfoHandPicK = customerInfoHandPicK;
    this.customerInfoHandPicKAfter = customerInfoHandPicKAfter;
    this.drawerButton = drawerButton;
    this.frame = frame;
    this.historyDriverBtn = historyDriverBtn;
    this.locationStart = locationStart;
    this.locationStartAfter = locationStartAfter;
    this.locationStartHandpick = locationStartHandpick;
    this.locationStop = locationStop;
    this.locationStopAfter = locationStopAfter;
    this.locationStopHandpick = locationStopHandpick;
    this.mainPageToolbar55 = mainPageToolbar55;
    this.messageToCus = messageToCus;
    this.messageToCustAfter = messageToCustAfter;
    this.money = money;
    this.moneyAfter = moneyAfter;
    this.moneyHandpick = moneyHandpick;
    this.name = name;
    this.nameAfter = nameAfter;
    this.nameHandpick = nameHandpick;
    this.openMapsStart = openMapsStart;
    this.openMapsStartAfter = openMapsStartAfter;
    this.openMapsStartHandpick = openMapsStartHandpick;
    this.openMapsStop = openMapsStop;
    this.openMapsStopAfter = openMapsStopAfter;
    this.openMapsStopHandpick = openMapsStopHandpick;
    this.phoneFromCust = phoneFromCust;
    this.phoneFromCustAfter = phoneFromCustAfter;
    this.resetMapBtn = resetMapBtn;
    this.rideStatus = rideStatus;
    this.rideStatusAfter = rideStatusAfter;
    this.rideStatusHandpick = rideStatusHandpick;
    this.workingSwitch = workingSwitch;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityDriverContent2Binding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityDriverContent2Binding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_driver_content2, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityDriverContent2Binding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bringUpBottomLayout_handpick;
      LinearLayout bringUpBottomLayoutHandpick = rootView.findViewById(id);
      if (bringUpBottomLayoutHandpick == null) {
        break missingId;
      }

      id = R.id.cancel;
      ImageView cancel = rootView.findViewById(id);
      if (cancel == null) {
        break missingId;
      }

      id = R.id.cancel_after;
      ImageView cancelAfter = rootView.findViewById(id);
      if (cancelAfter == null) {
        break missingId;
      }

      id = R.id.customerInfo;
      LinearLayout customerInfo = rootView.findViewById(id);
      if (customerInfo == null) {
        break missingId;
      }

      id = R.id.customerInfo_handPicK;
      LinearLayout customerInfoHandPicK = rootView.findViewById(id);
      if (customerInfoHandPicK == null) {
        break missingId;
      }

      id = R.id.customerInfo_handPicK_after;
      LinearLayout customerInfoHandPicKAfter = rootView.findViewById(id);
      if (customerInfoHandPicKAfter == null) {
        break missingId;
      }

      id = R.id.drawerButton;
      ImageView drawerButton = rootView.findViewById(id);
      if (drawerButton == null) {
        break missingId;
      }

      id = R.id.frame;
      SwipeFlingAdapterView frame = rootView.findViewById(id);
      if (frame == null) {
        break missingId;
      }

      id = R.id.history_driver_btn;
      Button historyDriverBtn = rootView.findViewById(id);
      if (historyDriverBtn == null) {
        break missingId;
      }

      id = R.id.location_start;
      TextView locationStart = rootView.findViewById(id);
      if (locationStart == null) {
        break missingId;
      }

      id = R.id.location_start_after;
      TextView locationStartAfter = rootView.findViewById(id);
      if (locationStartAfter == null) {
        break missingId;
      }

      id = R.id.location_start_handpick;
      TextView locationStartHandpick = rootView.findViewById(id);
      if (locationStartHandpick == null) {
        break missingId;
      }

      id = R.id.location_stop;
      TextView locationStop = rootView.findViewById(id);
      if (locationStop == null) {
        break missingId;
      }

      id = R.id.location_stop_after;
      TextView locationStopAfter = rootView.findViewById(id);
      if (locationStopAfter == null) {
        break missingId;
      }

      id = R.id.location_stop_handpick;
      TextView locationStopHandpick = rootView.findViewById(id);
      if (locationStopHandpick == null) {
        break missingId;
      }

      id = R.id.main_page_toolbar_55;
      View mainPageToolbar55 = rootView.findViewById(id);
      if (mainPageToolbar55 == null) {
        break missingId;
      }
      AppBarLayoutDriverBinding binding_mainPageToolbar55 = AppBarLayoutDriverBinding.bind(mainPageToolbar55);

      id = R.id.message_to_cus;
      FloatingActionButton messageToCus = rootView.findViewById(id);
      if (messageToCus == null) {
        break missingId;
      }

      id = R.id.message_to_cust_after;
      FloatingActionButton messageToCustAfter = rootView.findViewById(id);
      if (messageToCustAfter == null) {
        break missingId;
      }

      id = R.id.money;
      TextView money = rootView.findViewById(id);
      if (money == null) {
        break missingId;
      }

      id = R.id.money_after;
      TextView moneyAfter = rootView.findViewById(id);
      if (moneyAfter == null) {
        break missingId;
      }

      id = R.id.money_handpick;
      TextView moneyHandpick = rootView.findViewById(id);
      if (moneyHandpick == null) {
        break missingId;
      }

      id = R.id.name;
      TextView name = rootView.findViewById(id);
      if (name == null) {
        break missingId;
      }

      id = R.id.name_after;
      TextView nameAfter = rootView.findViewById(id);
      if (nameAfter == null) {
        break missingId;
      }

      id = R.id.name_handpick;
      TextView nameHandpick = rootView.findViewById(id);
      if (nameHandpick == null) {
        break missingId;
      }

      id = R.id.openMaps_start;
      FloatingActionButton openMapsStart = rootView.findViewById(id);
      if (openMapsStart == null) {
        break missingId;
      }

      id = R.id.openMaps_start_after;
      FloatingActionButton openMapsStartAfter = rootView.findViewById(id);
      if (openMapsStartAfter == null) {
        break missingId;
      }

      id = R.id.openMaps_start_handpick;
      FloatingActionButton openMapsStartHandpick = rootView.findViewById(id);
      if (openMapsStartHandpick == null) {
        break missingId;
      }

      id = R.id.openMaps_stop;
      FloatingActionButton openMapsStop = rootView.findViewById(id);
      if (openMapsStop == null) {
        break missingId;
      }

      id = R.id.openMaps_stop_after;
      FloatingActionButton openMapsStopAfter = rootView.findViewById(id);
      if (openMapsStopAfter == null) {
        break missingId;
      }

      id = R.id.openMaps_stop_handpick;
      FloatingActionButton openMapsStopHandpick = rootView.findViewById(id);
      if (openMapsStopHandpick == null) {
        break missingId;
      }

      id = R.id.phone_from_cust;
      FloatingActionButton phoneFromCust = rootView.findViewById(id);
      if (phoneFromCust == null) {
        break missingId;
      }

      id = R.id.phone_from_cust_after;
      FloatingActionButton phoneFromCustAfter = rootView.findViewById(id);
      if (phoneFromCustAfter == null) {
        break missingId;
      }

      id = R.id.reset_map_btn;
      Button resetMapBtn = rootView.findViewById(id);
      if (resetMapBtn == null) {
        break missingId;
      }

      id = R.id.rideStatus;
      SlideToActView rideStatus = rootView.findViewById(id);
      if (rideStatus == null) {
        break missingId;
      }

      id = R.id.rideStatus_after;
      Button rideStatusAfter = rootView.findViewById(id);
      if (rideStatusAfter == null) {
        break missingId;
      }

      id = R.id.rideStatus_handpick;
      Button rideStatusHandpick = rootView.findViewById(id);
      if (rideStatusHandpick == null) {
        break missingId;
      }

      id = R.id.workingSwitch;
      Switch workingSwitch = rootView.findViewById(id);
      if (workingSwitch == null) {
        break missingId;
      }

      return new ActivityDriverContent2Binding((FrameLayout) rootView, bringUpBottomLayoutHandpick,
          cancel, cancelAfter, customerInfo, customerInfoHandPicK, customerInfoHandPicKAfter,
          drawerButton, frame, historyDriverBtn, locationStart, locationStartAfter,
          locationStartHandpick, locationStop, locationStopAfter, locationStopHandpick,
          binding_mainPageToolbar55, messageToCus, messageToCustAfter, money, moneyAfter,
          moneyHandpick, name, nameAfter, nameHandpick, openMapsStart, openMapsStartAfter,
          openMapsStartHandpick, openMapsStop, openMapsStopAfter, openMapsStopHandpick,
          phoneFromCust, phoneFromCustAfter, resetMapBtn, rideStatus, rideStatusAfter,
          rideStatusHandpick, workingSwitch);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
