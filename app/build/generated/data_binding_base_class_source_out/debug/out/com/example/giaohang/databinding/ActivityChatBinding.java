// Generated by view binder compiler. Do not edit!
package com.example.giaohang.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.swiperefreshlayout.widget.SwipeRefreshLayout;
import androidx.viewbinding.ViewBinding;
import com.example.giaohang.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityChatBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageButton chatAddBtn;

  @NonNull
  public final AppBarLayoutDriverBinding chatAppBar;

  @NonNull
  public final EditText chatMessageView;

  @NonNull
  public final ImageButton chatSendBtn;

  @NonNull
  public final LinearLayout linearLayout;

  @NonNull
  public final SwipeRefreshLayout messageSwipeLayout;

  @NonNull
  public final RecyclerView messagesList;

  private ActivityChatBinding(@NonNull RelativeLayout rootView, @NonNull ImageButton chatAddBtn,
      @NonNull AppBarLayoutDriverBinding chatAppBar, @NonNull EditText chatMessageView,
      @NonNull ImageButton chatSendBtn, @NonNull LinearLayout linearLayout,
      @NonNull SwipeRefreshLayout messageSwipeLayout, @NonNull RecyclerView messagesList) {
    this.rootView = rootView;
    this.chatAddBtn = chatAddBtn;
    this.chatAppBar = chatAppBar;
    this.chatMessageView = chatMessageView;
    this.chatSendBtn = chatSendBtn;
    this.linearLayout = linearLayout;
    this.messageSwipeLayout = messageSwipeLayout;
    this.messagesList = messagesList;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityChatBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityChatBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_chat, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityChatBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.chat_add_btn;
      ImageButton chatAddBtn = rootView.findViewById(id);
      if (chatAddBtn == null) {
        break missingId;
      }

      id = R.id.chat_app_bar;
      View chatAppBar = rootView.findViewById(id);
      if (chatAppBar == null) {
        break missingId;
      }
      AppBarLayoutDriverBinding binding_chatAppBar = AppBarLayoutDriverBinding.bind(chatAppBar);

      id = R.id.chat_message_view;
      EditText chatMessageView = rootView.findViewById(id);
      if (chatMessageView == null) {
        break missingId;
      }

      id = R.id.chat_send_btn;
      ImageButton chatSendBtn = rootView.findViewById(id);
      if (chatSendBtn == null) {
        break missingId;
      }

      id = R.id.linearLayout;
      LinearLayout linearLayout = rootView.findViewById(id);
      if (linearLayout == null) {
        break missingId;
      }

      id = R.id.message_swipe_layout;
      SwipeRefreshLayout messageSwipeLayout = rootView.findViewById(id);
      if (messageSwipeLayout == null) {
        break missingId;
      }

      id = R.id.messages_list;
      RecyclerView messagesList = rootView.findViewById(id);
      if (messagesList == null) {
        break missingId;
      }

      return new ActivityChatBinding((RelativeLayout) rootView, chatAddBtn, binding_chatAppBar,
          chatMessageView, chatSendBtn, linearLayout, messageSwipeLayout, messagesList);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
