// Generated by view binder compiler. Do not edit!
package com.example.giaohang.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.viewbinding.ViewBinding;
import com.example.giaohang.R;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityCustomerRequestSettingsBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final FloatingActionButton btnAutoStart;

  @NonNull
  public final FloatingActionButton btnAutoStop;

  @NonNull
  public final Button confirm;

  @NonNull
  public final EditText locationStartCust;

  @NonNull
  public final EditText locationStopCust;

  @NonNull
  public final Toolbar myToolbar;

  @NonNull
  public final EditText name;

  @NonNull
  public final EditText namePersonDestination;

  @NonNull
  public final EditText noteCust;

  @NonNull
  public final EditText phoneCusStart;

  @NonNull
  public final EditText phoneCusStop;

  @NonNull
  public final EditText productMoneyRate;

  @NonNull
  public final EditText productName;

  @NonNull
  public final EditText productNumber;

  @NonNull
  public final ImageView profileImage;

  @NonNull
  public final TextView resultCaculateMoney;

  @NonNull
  public final TextView resultCalculateDistance;

  @NonNull
  public final TextView resultCalculateFee;

  @NonNull
  public final TextView resultProductName;

  private ActivityCustomerRequestSettingsBinding(@NonNull ScrollView rootView,
      @NonNull FloatingActionButton btnAutoStart, @NonNull FloatingActionButton btnAutoStop,
      @NonNull Button confirm, @NonNull EditText locationStartCust,
      @NonNull EditText locationStopCust, @NonNull Toolbar myToolbar, @NonNull EditText name,
      @NonNull EditText namePersonDestination, @NonNull EditText noteCust,
      @NonNull EditText phoneCusStart, @NonNull EditText phoneCusStop,
      @NonNull EditText productMoneyRate, @NonNull EditText productName,
      @NonNull EditText productNumber, @NonNull ImageView profileImage,
      @NonNull TextView resultCaculateMoney, @NonNull TextView resultCalculateDistance,
      @NonNull TextView resultCalculateFee, @NonNull TextView resultProductName) {
    this.rootView = rootView;
    this.btnAutoStart = btnAutoStart;
    this.btnAutoStop = btnAutoStop;
    this.confirm = confirm;
    this.locationStartCust = locationStartCust;
    this.locationStopCust = locationStopCust;
    this.myToolbar = myToolbar;
    this.name = name;
    this.namePersonDestination = namePersonDestination;
    this.noteCust = noteCust;
    this.phoneCusStart = phoneCusStart;
    this.phoneCusStop = phoneCusStop;
    this.productMoneyRate = productMoneyRate;
    this.productName = productName;
    this.productNumber = productNumber;
    this.profileImage = profileImage;
    this.resultCaculateMoney = resultCaculateMoney;
    this.resultCalculateDistance = resultCalculateDistance;
    this.resultCalculateFee = resultCalculateFee;
    this.resultProductName = resultProductName;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityCustomerRequestSettingsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityCustomerRequestSettingsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_customer_request_settings, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityCustomerRequestSettingsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_auto_start;
      FloatingActionButton btnAutoStart = rootView.findViewById(id);
      if (btnAutoStart == null) {
        break missingId;
      }

      id = R.id.btn_auto_stop;
      FloatingActionButton btnAutoStop = rootView.findViewById(id);
      if (btnAutoStop == null) {
        break missingId;
      }

      id = R.id.confirm;
      Button confirm = rootView.findViewById(id);
      if (confirm == null) {
        break missingId;
      }

      id = R.id.location_start_cust;
      EditText locationStartCust = rootView.findViewById(id);
      if (locationStartCust == null) {
        break missingId;
      }

      id = R.id.location_stop_cust;
      EditText locationStopCust = rootView.findViewById(id);
      if (locationStopCust == null) {
        break missingId;
      }

      id = R.id.my_toolbar;
      Toolbar myToolbar = rootView.findViewById(id);
      if (myToolbar == null) {
        break missingId;
      }

      id = R.id.name;
      EditText name = rootView.findViewById(id);
      if (name == null) {
        break missingId;
      }

      id = R.id.name_person_destination;
      EditText namePersonDestination = rootView.findViewById(id);
      if (namePersonDestination == null) {
        break missingId;
      }

      id = R.id.note_cust;
      EditText noteCust = rootView.findViewById(id);
      if (noteCust == null) {
        break missingId;
      }

      id = R.id.phone_cus_start;
      EditText phoneCusStart = rootView.findViewById(id);
      if (phoneCusStart == null) {
        break missingId;
      }

      id = R.id.phone_cus_stop;
      EditText phoneCusStop = rootView.findViewById(id);
      if (phoneCusStop == null) {
        break missingId;
      }

      id = R.id.product_money_rate;
      EditText productMoneyRate = rootView.findViewById(id);
      if (productMoneyRate == null) {
        break missingId;
      }

      id = R.id.product_name;
      EditText productName = rootView.findViewById(id);
      if (productName == null) {
        break missingId;
      }

      id = R.id.product_number;
      EditText productNumber = rootView.findViewById(id);
      if (productNumber == null) {
        break missingId;
      }

      id = R.id.profileImage;
      ImageView profileImage = rootView.findViewById(id);
      if (profileImage == null) {
        break missingId;
      }

      id = R.id.result_caculate_money;
      TextView resultCaculateMoney = rootView.findViewById(id);
      if (resultCaculateMoney == null) {
        break missingId;
      }

      id = R.id.result_calculate_distance;
      TextView resultCalculateDistance = rootView.findViewById(id);
      if (resultCalculateDistance == null) {
        break missingId;
      }

      id = R.id.result_calculate_fee;
      TextView resultCalculateFee = rootView.findViewById(id);
      if (resultCalculateFee == null) {
        break missingId;
      }

      id = R.id.result_product_name;
      TextView resultProductName = rootView.findViewById(id);
      if (resultProductName == null) {
        break missingId;
      }

      return new ActivityCustomerRequestSettingsBinding((ScrollView) rootView, btnAutoStart,
          btnAutoStop, confirm, locationStartCust, locationStopCust, myToolbar, name,
          namePersonDestination, noteCust, phoneCusStart, phoneCusStop, productMoneyRate,
          productName, productNumber, profileImage, resultCaculateMoney, resultCalculateDistance,
          resultCalculateFee, resultProductName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
